
Traffic Sign Classification - CNN vs. ResNet50
==============================================

This project compares two deep learning approaches for multi-class traffic sign classification
using a small subset of the Belgian Traffic Sign Dataset.

We implemented and evaluated two models located in separate folders:

1. Custom CNN:
   - A lightweight model trained from scratch using Conv2D layers.
   - Designed to be fast, efficient, and suitable for smaller datasets.

2. ResNet50 (Transfer Learning):
   - Uses a frozen pretrained ResNet50 base (trained on ImageNet).
   - Adds a custom classifier head for traffic sign classification.
   - Intended to leverage powerful pretrained features for better performance.

Each model includes:
- Dataset download and preparation
- Model architecture definition and training
- Evaluation on the test set
- Metrics: test accuracy, loss, classification report, and confusion matrix
- Visualization of sample predictions

Results Summary
===============

Dataset:
- 5 traffic sign classes
- ~50 test samples
- Image size: 256x256

Performance Comparison:

| Model              | Test Accuracy | Test Loss | Best Val Accuracy | Notes                     |
|--------------------|---------------|-----------|--------------------|---------------------------|
| Custom CNN         | 96.15%        | 0.18      | 93.62%             | Best performance overall  |
| ResNet50 (Frozen)  | 59.62%        | 0.97      | 61.70%             | Underfitting observed     |

Key Insights:
- The custom CNN model significantly outperformed the ResNet50 model on this dataset.
- Transfer learning did not help due to the small dataset size and possible domain mismatch.
- Improvements such as unfreezing some ResNet50 layers or enlarging the dataset may lead to better results.

Requirements:
- TensorFlow / Keras
- NumPy, Matplotlib, Seaborn
- Dataset is downloaded automatically from the link included in the code.

